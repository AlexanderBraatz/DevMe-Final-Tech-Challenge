{"version":3,"sources":["styles/assets/images/spaceScrollingBackground.jpg","components/Background.js","components/Button.js","components/ColourPicker/ColourPicker.js","components/ColourPicker/index.js","components/PlayerTag/PlayerTag.js","components/PlayerTag/index.js","data/actions/state.js","components/SideBar/SideBar.js","components/SideBar/index.js","components/MenueOpener/MenueOpener.js","components/MenueOpener/index.js","components/Start/Start.js","components/Start/index.js","components/App.js","serviceWorker.js","data/initial.js","data/business.js","data/reducer.js","data/store.js","index.js"],"names":["module","exports","Background","className","src","spaceScrollingBackground","alt","Button","name","whenClick","colour","classNamePassed","onClick","style","backgroundColor","ColourPicker","colours","color","onChoiceComplete","useState","choosing","setChoosing","picked","setPicked","console","log","map","i","handleChoice","id","connect","PlayerTag","player","save","remove","eddit","setName","champion","setColour","warning","setWarning","htmlFor","type","placeholder","onChange","e","currentTarget","value","choice","length","preventDefault","state","dispatch","savePlayer","removePlayer","switchEddit","SideBar","players","sideBarView","addP","key","href","target","rel","MenueOpener","swichM","Start","startView","start","App","Boolean","window","location","hostname","match","initial","numberOfPlayers","roundCounter","matches","matchView","resultsView","roundComplete","tournamentComplete","makeAllMatches","playerIds","matchups","push","slice","startGame","switchMenue","setNumberOfPlayers","newPlayers","reduce","acc","addPlayer","newID","reducer","action","newMatches","matchup","setUpMatches","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.06695a06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spaceScrollingBackground.0faf379a.jpg\";","import React from \"react\";\r\nimport spaceScrollingBackground from \"../styles/assets/images/spaceScrollingBackground.jpg\"\r\n\r\nconst Background = () => (\r\n        <img \r\n        className=\"background__image\"\r\n        src={spaceScrollingBackground} \r\n        alt=\"alien Planet background\"/>\r\n)\r\n\r\nexport default Background;","import React from \"react\";\r\n\r\n\r\nconst Button = ({name, whenClick, colour,classNamePassed}) => (\r\n    <button \r\n        onClick={ whenClick }\r\n        className={classNamePassed}\r\n        style={{ backgroundColor : `var(--${colour})`, }}\r\n        >{name}\r\n    </button>\r\n);\r\nexport default Button; ","\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nconst ColourPicker = ({colours,color,onChoiceComplete}) => {\r\n\r\n    const [choosing,setChoosing] = useState(false);\r\n    const [picked,setPicked] = useState(color);\r\n\r\n    const handleOpen = () => {console.log(choosing); setChoosing(!choosing);}\r\n    const handleChoice = (colour) => {\r\n\r\n        setChoosing(!choosing);\r\n        setPicked(colour);\r\n        onChoiceComplete(colour);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className=\"picker__container\">\r\n                <div \r\n                    className=\"picker__lable\" \r\n\r\n                >\r\n                    <p>Colour :</p>\r\n                </div>\r\n                <div \r\n                    className=\"square picker__display\"\r\n                    onClick={ handleOpen }\r\n                    style={{backgroundColor:picked,}}\r\n                ></div>\r\n                { !choosing ? null :\r\n                    colours.map((colour,i)=>(\r\n                        <div \r\n                            className=\"square picker__choice\"\r\n                            style={{backgroundColor:colour,}}\r\n                            onClick={ () => handleChoice(colour) }\r\n                            id={i}\r\n                        ></div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ColourPicker;","import { connect } from \"react-redux\";\r\nimport ColourPicker from \"./ColourPicker\"\r\n\r\n\r\nconst mapStateToProps = ({colours},{color, onChoiceComplete}) => ({colours,color,onChoiceComplete});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(ColourPicker);","import React, { useState } from \"react\";\r\nimport Button from '../Button'\r\nimport ColourPicker from '../ColourPicker'\r\n\r\nconst PlayerTag = ({player, save, remove, eddit}) => {\r\n\r\n    // const [collapsed, setCollapsed] = useState(true);\r\n    const [name, setName] = useState(\"\");\r\n    const [colour, setColour] = useState(player.champion ? \"#D4AF37\" : player.colour);\r\n    const [warning, setWarning] = useState(false);\r\n\r\n    // const handleCollapse = () => setCollapsed(!collapsed);\r\n    const handleChangeName = (e) => setName(e.currentTarget.value);\r\n    const handleChoiceComplete  = (choice) => setColour(choice);\r\n\r\n    const handleSave  = (e) => {\r\n        if(name.length === 0 || name.length > 10){\r\n            e.preventDefault();\r\n            setWarning(true);\r\n        }else{\r\n            e.preventDefault();\r\n            save(player.id, name, colour);\r\n            setWarning(false);\r\n\r\n        }\r\n\r\n    }\r\n    const handleDelete  = (e) => {\r\n        e.preventDefault();\r\n        remove(player.id);\r\n    }\r\n    const handleEddit = () => {\r\n        eddit(player.id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div \r\n            // onClick={handleCollapse}\r\n            className=\"playerTag__heading\"\r\n            onClick={ handleEddit }\r\n            >\r\n                <p\r\n                    className=\"playerTag__heading--content\"\r\n                    style={{backgroundColor : player.colour}}\r\n                    >\r\n                        {player.name}\r\n                    </p>\r\n        </div>\r\n        {!player.eddit ? null :\r\n            <div className=\"playerTag__body\">\r\n                <div className=\"playerTag__body--left\">\r\n                    alien\r\n                </div>\r\n                <div className=\"playerTag__body--right\">\r\n                    <form className=\"playerTag__form\">\r\n                        <div className=\"playerTag__formGroup\">\r\n                            <label \r\n                                className=\"playerTag__namelable\" \r\n                                htmlFor=\"name\"\r\n                                >NAME :\r\n                            </label>\r\n                            <input\r\n                                className={ `playerTag__nameinput ${warning? \"warn\": \"\"}`} \r\n                                id= \"name\"\r\n                                name=\"edit\"\r\n                                type=\"text\"\r\n                                placeholder={player.name}\r\n\r\n                                onChange={ handleChangeName }\r\n                                value={ name }\r\n\r\n\r\n                            />\r\n                        </div>\r\n                        <ColourPicker\r\n                            color={ colour }\r\n                            onChoiceComplete={ handleChoiceComplete }\r\n                        />\r\n\r\n                        <div className=\"playerTag__buttons\">\r\n                            <Button \r\n                                name=\"SAVE\"\r\n                                whenClick={ handleSave }\r\n                                colour=\"green\"\r\n                                classNamePassed=\"playerTag__button--save\"\r\n                            />\r\n                            <Button \r\n                                name=\"DELETE\"\r\n                                whenClick={ handleDelete }\r\n                                colour=\"red\" \r\n                                classNamePassed=\"playerTag__button--delete\"\r\n                            />\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\nexport default PlayerTag;\r\n","import { connect } from \"react-redux\";\r\nimport PlayerTag from \"./PlayerTag\"\r\nimport {savePlayer, removePlayer, switchEddit} from \"../../data/actions/state\"\r\n\r\nconst mapStatetoProps = (state,{player}) => ({player});\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        save: (id, name, colour) => { \r\n            dispatch(savePlayer(id, name, colour));\r\n        },\r\n        remove: (id)=> { dispatch(removePlayer(id))},\r\n        eddit: (id) => {dispatch(switchEddit(id))},\r\n    }\r\n        \r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchToProps)(PlayerTag);","export const savePlayer = (id, name, colour) => {\r\n    return {\r\n        type:\"SAVE_PLAYER\",\r\n        id,\r\n        name,\r\n        colour,\r\n    }\r\n}\r\n\r\nexport const removePlayer = (id) => {\r\n    return {\r\n        type: \"REMOVE__PLAYER\",\r\n        id,\r\n    }\r\n};\r\n\r\nexport const switchEddit = (id) => {\r\n    return {\r\n        type: \"SWITCH_EDDIT\",\r\n        id,\r\n    }\r\n};\r\n\r\nexport const addPlayer = () => {\r\n    return {\r\n        type: \"ADD_PLAYER\",\r\n    }\r\n};\r\n\r\nexport const swichMenue = () => {\r\n    return {\r\n        type: \"SWITCH_MENUE\",\r\n    }\r\n};\r\n\r\nexport const startGame = () => {\r\n    return {\r\n        type: \"START\",\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport PlayerTag from \"../PlayerTag\"\r\n\r\nconst SideBar = ({players, sideBarView, addP}) => {\r\n\r\nreturn (\r\n    <div \r\n        className={`sideBar ${sideBarView ? \"showSidebar\": \"\"}`}\r\n        >\r\n        <div className=\"sideBar__heading\">\r\n            <h2\r\n                className=\"sideBar__heading--cotent\"\r\n            >Players . . . </h2>\r\n        </div>\r\n        <div \r\n            className=\"sideBar__addPLbutton\"\r\n            onClick={ addP }\r\n            >Add another Player</div>\r\n        { players.map((player,i)=>{\r\n            return(\r\n                <PlayerTag key={ i } player={player}/>\r\n\r\n            )\r\n            })\r\n        }\r\n        <div \r\n            className=\"sideBar__fotter\"\r\n            >ALEXANDER BRAATZ - <a \r\n                href=\"https://github.com/AlexanderBraatz/DevMe-Final-Tech-Challenge\" \r\n                target=\"_blank\" \r\n                rel=\"noopener noreferrer\">Github.com</a></div>\r\n\r\n    </div>\r\n    );\r\n}\r\nexport default SideBar;\r\n","import { connect } from \"react-redux\";\r\nimport SideBar from \"./SideBar\"\r\nimport {addPlayer} from \"../../data/actions/state\"\r\n\r\nconst mapStateToProps = ({players, sideBarView}) => ({players, sideBarView});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addP: () => dispatch(addPlayer()),\r\n    }\r\n        \r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SideBar);","import React from \"react\";\r\n\r\n\r\nconst MenueOpener = ({sideBarView, swichM}) => {\r\n\r\n    const handleClick = () => swichM();\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <div \r\n                className={`menueOpener ${sideBarView ? \"moveOpener\": \"\"}`}\r\n                onClick={ handleClick }\r\n                >\r\n                    <div>\r\n                        <div className=\"menueOpener__content\">\r\n                        ☰\r\n                        </div>\r\n\r\n                    </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenueOpener;","import { connect } from \"react-redux\";\r\nimport MenueOpener from \"./MenueOpener\"\r\nimport {swichMenue} from \"../../data/actions/state\"\r\n\r\nconst mapStateToProps = ({ sideBarView}) => ({sideBarView});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        swichM: () => dispatch(swichMenue()),\r\n    }\r\n        \r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MenueOpener);","import React from \"react\";\r\nimport Button from '../Button'\r\n\r\n\r\nconst Start = ({startView, start}) => {\r\n\r\n    const handleStart = () => start();\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        {!startView ? null :\r\n            <section \r\n                className=\"start_container\"\r\n                >\r\n                <div \r\n                    className=\"start__content\"\r\n                    >\r\n                    <div \r\n                        className=\"start__heading\"\r\n                        >\r\n                        <h1 \r\n                            className=\"start__heading--content\"\r\n                        >Extraterrestrial ...</h1>\r\n\r\n                    </div>\r\n                    <p \r\n                        className=\"start__text\"\r\n                        >Hello, young earthling! In this Game You and your friends are Aliens that have had to make an emergency landing on a alien planet, the Ship`s Life support will only allow one of you to return to your home world safely. You have decided to select the survivor by way of a Knockout Tournament in the most intergalactic sport you know. PING PONG!</p>\r\n                    <Button className=\"start__button\"\r\n                        name=\"START\"\r\n                        whenClick={ handleStart }\r\n                        colour=\"red\" \r\n                        classNamePassed=\"start__button\"\r\n                    />\r\n                </div>\r\n            </section>\r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Start;","import { connect } from \"react-redux\";\r\nimport Start from \"./Start\"\r\nimport {startGame} from \"../../data/actions/state\"\r\n\r\nconst mapStateToProps = ({ startView}) => ({startView});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        start: () => dispatch(startGame()),\r\n    }\r\n        \r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Start);","import React from 'react';\nimport '../styles/App.css';\nimport Background from './Background'\nimport SideBar from './SideBar'\nimport MenueOpener from './MenueOpener'\nimport Start from './Start'\n// import Match from './Match'\n// import End from './End'\n\nfunction App() {\n  return (\n    <>\n      <Background />\n      <SideBar />\n      <MenueOpener />\n      <Start />\n      {/* <Match /> */}\n      {/* <End /> */}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initial = { \r\n  colours :['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \r\n    '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\r\n    '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',],\r\n\r\n  numberOfPlayers : 1,\r\n  roundCounter : 1,\r\n  // stateHistory : [ {previousstate}, {previousstate}],\r\n  \r\n  //players have an id property to allow for reliable match making. If the index was used deleting a player during a match would shift the index of all following players, breaking the match making. \r\n\r\n  players:[\r\n    {\r\n      id :1, \r\n      name : \"Player 1\",\r\n      colour : \"#FF6633\", \r\n      champion : false,\r\n      eddit : false,\r\n    },\r\n    \r\n  ],\r\n\r\n  matches:[\r\n    // {\r\n    //   playing : [ 0, 1],\r\n    //   winner : \"\" \r\n    // },\r\n    // {\r\n    //   playing : [ 2, 3],\r\n    //   winner : false \r\n    // },\r\n  ],\r\n\r\n\r\nstartView : true,\r\nsideBarView : false,\r\nmatchView : true,\r\nresultsView : false,\r\n\r\nroundComplete : false,\r\ntournamentComplete : false,\r\n};\r\n\r\nexport default initial;","export const setUpMatches = (state) => {\r\n    const {players } = state;\r\n\t\r\n    const playerIds = players.map(\r\n\t\t(player)=> player.id \r\n    );\r\n\r\n    const AllMatchups = makeAllMatches(playerIds);\r\n\r\n\r\n    const newMatches = AllMatchups.map((matchup)=>{\r\n        if (matchup.length === 1){\r\n            return(\r\n                {\r\n                \"playing\" : matchup,\r\n                \"winner\" : matchup[0],\r\n                }\r\n            )\r\n        }else{\r\n            return(\r\n                    {\r\n                    \"playing\" : matchup,\r\n                    \"winner\" : \"\" ,\r\n                    }\r\n            )\r\n\r\n        }\r\n    });\r\n    console.log(newMatches)\r\n\treturn({\r\n\t\t...state,\r\n        matches :newMatches\r\n\r\n\t})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst makeAllMatches = (playerIds) =>{\r\n\r\n    let matchups=[];\r\n    \r\n    for (let i=0; i+1<= playerIds.length; i+=2) {\r\n        matchups.push(playerIds.slice(i,i+2));\r\n    }\r\n\r\n    return(matchups);\r\n}\r\n","import {setUpMatches} from \"./business\"\r\n\r\n\r\nconst reducer = (state, action) => { \r\n\tswitch(action.type){\r\n\t\tcase \"START\" : return setUpMatches(startGame(state));\r\n\t\tcase \"SWITCH_MENUE\" : return switchMenue(state);\r\n\t\tcase \"SWITCH_EDDIT\" : return switchEddit(state, action);\r\n\t\tcase \"SAVE_PLAYER\" : return savePlayer(state, action);\r\n\t\tcase \"REMOVE__PLAYER\" : return setNumberOfPlayers(removePlayer(state, action));\r\n\t\tcase \"ADD_PLAYER\" : return setNumberOfPlayers(addPlayer(state));\r\n\t\tdefault: return state;\r\n\t}\r\n}\r\n\r\n\r\n\r\nconst startGame = (state) => {\r\n\r\n\treturn({\r\n\t\t...state,\r\n\t\tstartView: false,\r\n\t\tmatchView: true,\r\n\r\n\t})\r\n}\r\nconst switchMenue = (state) => {\r\n\t\r\n\tconst {sideBarView} = state;\r\n\r\n\treturn({\r\n\t\t...state,\r\n\t\tsideBarView: !sideBarView,\r\n\t})\r\n}\r\n\r\nconst setNumberOfPlayers = (state) =>{\r\n\r\n\tconst {players} = state;\r\n\r\n\r\n\treturn({\r\n\t\t...state,\r\n\t\tnumberOfPlayers : players.length,\r\n\t});\r\n}\r\n\r\n\r\nconst switchEddit = (state, {id}) => {\r\n\t\r\n\tconst {players} = state;\r\n\t\r\n\tconst newPlayers = players.map(( player )=> {\r\n\r\n\t\treturn(\r\n\t\t\tplayer.id === id \r\n\t\t\t? { ...player, eddit: !player.eddit, }\r\n\t\t\t: {...player, eddit: false }\r\n\t\t)\r\n\t});\r\n\r\n\treturn({\r\n\t\t...state,\r\n\t\tplayers: newPlayers,\r\n\t})\r\n}\r\n\r\n\r\nconst savePlayer = (state,{id, name, colour}) => {\r\n\r\n\r\n\tconst newPlayers = state.players.map((player)=>player.id === id ? {\r\n\r\n\t\t...player,\r\n\t\tname: name,\r\n\t\tcolour: colour,\r\n\r\n\t}:player)\r\n\r\n\treturn({\r\n\r\n\t\t...state,\r\n\t\tplayers : newPlayers,\r\n\r\n\t});\r\n}\r\n\r\n\r\n\r\n\r\nconst removePlayer = (state,{id}) => {\r\n\r\n\tconst {players} = state;\r\n\r\n\tconst newPlayers =  players.reduce(\r\n\t\t(acc,player)=> player.id === id \r\n\t\t\t? acc \r\n\t\t\t:[...acc,player]\r\n\t\t,[]\r\n\t);\r\n\r\n\treturn({\r\n\t\t...state,\r\n\t\tplayers: newPlayers,\r\n\t})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst addPlayer = (state)=>{\r\n\r\n\tconst {players, numberOfPlayers, colours} = state;\r\n\tconst  newID = numberOfPlayers + 1\r\n\r\n\treturn({\r\n\t\t...state,\r\n\t\tplayers: [\r\n\r\n\t\t\t{\r\n\t\t\t\tid : newID, \r\n\t\t\t\tname : `Player ${newID}`,\r\n\t\t\t\tcolour : colours[newID], \r\n\t\t\t\tchampion : false,\r\n\t\t\t\teddit : false,\r\n\t\t\t},\r\n\t\t\t...players,\r\n\r\n\t\t]\r\n\t});\r\n}\r\n\r\n\r\nexport default reducer ;","import { createStore } from \"redux\";\r\n\r\n\r\nimport initial from \"./initial\";\r\nimport reducer from \"./reducer\";\r\n\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initial,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n    && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n    );\r\n    \r\n\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './data/store';\nimport { Provider } from \"react-redux\"; \n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= { store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}